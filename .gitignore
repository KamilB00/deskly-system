deskly-core/HELP.md
deskly-core/target
deskly-core/!.mvn/wrapper/maven-wrapper.jar
deskly-core/!**/src/main/**/target/
deskly-core/!**/src/test/**/target/


deskly-location/HELP.md
deskly-location/target
deskly-location/!.mvn/wrapper/maven-wrapper.jar
deskly-location/!**/src/main/**/target/
deskly-location/!**/src/test/**/target/

### STS ###
deskly-core/.apt_generated
deskly-core/.classpath
deskly-core/.factorypath
deskly-core/.project
deskly-core/.settings
deskly-core/.springBeans
deskly-core/.sts4-cache

deskly-location/.apt_generated
deskly-location/.classpath
deskly-location/.factorypath
deskly-location/.project
deskly-location/.settings
deskly-location/.springBeans
deskly-location/.sts4-cache

### IntelliJ IDEA ###
.idea
deskly-core/.idea
deskly-core/*.iws
deskly-core/*.iml
deskly-core/*.ipr

deskly-location/.idea
deskly-location/*.iws
deskly-location/*.iml
deskly-location/*.ipr
.DS_Store

### Terraform ###
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc